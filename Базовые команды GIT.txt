* - не относящиеся к Git, но важные для работы
# - комманды упрощающие и ускоряющие работу с гитом

* ls - посмотреть содержимое директории
* cd <directory> - выбрать, перейти в директорию
* cd .. - вернуться на одну папку назад


git init - инициализация репозитория в текущей папке
git status - показывает текущий статус проекта


Конфигурация и параметры Git:
git config --global user.name — показывает имя пользователя
git config --global user.name "name" — изменяет имя пользователя
git config --global user.email — показывает email пользователя
git config --global user.email "email" — изменяет email пользователя


Добавление/изменение файла:
git add <file> - добавить файл для отслеживания его гитом
git add . - добавить все файлы для отслеживания их гитом
git rm --cached <file> - удалить файл из отслеживания


Коммиты:
git commit - m "message" - создание коммита с сообщением, без переноса в окно комментария.
Комментарий, в данном случае, указывается в кавычках.


Работа с ветками:
git branch - высвечиваются текущие созданные ветки
git branch <name> - создает ветку
git branch -D <name> - удаляет ветку
git checkout <name> - переключиться на нужную ветку
# git checkout -b <name> - создает ветку и сразу на нее переключается
git merge <name> - совмещает текущую ветку с веткой name


Работа с GitHub:
git remote add <repository_name> <URL> - связывание локального и удаленного репозитория, а также
присвоение названия удаленному репозиторию.

По умолчанию удаленный репозиторий называется origin,но можно присваивать любое название.
Например: git remote add master <URL>
Название используется для удобства, как сокращение адреса.


git push <repository_name> <branch> - отправка изменений на сервер.
branch — имя ветки, которую надо отправить. Это полный запрос. Однако, это громоздко
и можно сократить.
Для этого есть флаг -u (по умолчанию) и тогда можно единожды написать команду:
git push -u <repository_name> <branch>

После этого можно писать более коротко, так как git запомнил,
что пушить надо на сервер <repository_name> ветку под именем <branch>:
git push


git clone <URL> - клонирует/скачивает репозиторий с адреса, взятом на гитхабе,
в текущую папку

git pull - скачивает изменения в репозитории, если таковые есть, с сервера.
При этом сразу меняет локальный репозиторий.

git remote rm <repository_name> - удаляет подключение к удаленному репозиторию, однако не удаляет его.
Так как репозиторий хранится на сервере и там же его нужно удалять.
